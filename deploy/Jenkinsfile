pipeline {
    agent any
    tools {
        maven 'Maven-3.9.11' // Nombre que configuraste en Tools
        jdk 'graalvm-21'        // Si tu proyecto lo necesita
    }
    environment {
        SONARQUBE_ENV = 'SonarQube'
        DOCKER_IMAGE = "whuaqui/ms-wh-example-batch:1.0.0-SNAPSHOT"
        PATH_DOCKERFILE ="/var/jenkins_home/workspace/ms-wh-example-batch/src/main/docker/Dockerfile.native-micro"
        DOCKER_CREDENTIALS = credentials('dockerhub')
    }

    stages {
        stage('Verificar Maven') {
            steps {
                sh 'pwd'
                sh 'ls -l'
                sh 'ls -l /var/jenkins_home/workspace/ms-wh-example-batch/src/main/docker/'
                sh 'echo $JAVA_HOME'
                sh 'java -version'
                sh 'javac -version'
                sh 'mvn -v'

            }
        }
        stage('Build') {
            steps {
                sh 'mvn clean install'
            }
        }

        stage('Mostrar variables') {
            steps {
                sh 'printenv'
            }
        }

        stage('Login DockerHub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh 'echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -f $PATH_DOCKERFILE -t $DOCKER_IMAGE ."
            }
        }
    }
}

